---
- name: check undefined varianles
  fail:
    msg: "Variable '{{ item }}' is not defined!!!"
  when: item  is not defined
  with_items:
    - origin_name
    - origin_asn

- name: notify if preffix list not defined
  debug:
    msg: "WARNING!!! prefix list {{ item }} not defined, no networks for announce. Check all you do correct."
  when: prefix_list[item] is not defined
  with_items:
    - "{{ origin_name }}-v4"
    - "{{ origin_name }}-v6"


- name: prepare TMP dir {{ juniper_build }}
  ansible.builtin.file:
    path: "{{ juniper_build }}"
    state: directory
  run_once: true


- name: generage community config
  template:
    src: community.conf.j2
    dest: "{{ juniper_build }}/community.conf"
  tags:
    - community
    - config

- name: upload community config
  junipernetworks.junos.junos_config:
    src: "{{ juniper_build }}/community.conf"
    update: replace
    comment: update config
    src_format: text
    check_commit: "{{ check_commit | default('no') }}"
    confirm: "{{ confirm | default(0) }}"
    comment: ansible configured
  diff: yes
  tags:
    - community
    - upload

- name: generage local preferences config
  template:
    src: local-preferencess.conf.j2
    dest: "{{ juniper_build }}/local-preferencess.conf"
  tags:
    - default-lp
    - config

- name: upload local preferences config
  junipernetworks.junos.junos_config:
    src: "{{ juniper_build }}/local-preferencess.conf"
    update: replace
    comment: update config
    src_format: text
    check_commit: "{{ check_commit | default('no') }}"
    confirm: "{{ confirm | default(0) }}"
    comment: ansible configured
  diff: yes
  tags:
    - default-lp
    - upload


- name: generage managed prefix-list config
  template:
    src: prefix-list.conf.j2
    dest: "{{ juniper_build }}/prefix-list.conf"
  tags:
    - prefix-list
    - config

- name: upload managed prefix-list config
  junipernetworks.junos.junos_config:
    src: "{{ juniper_build }}/prefix-list.conf"
    update: replace
    comment: update config
    src_format: text
    check_commit: "{{ check_commit | default('no') }}"
    confirm: "{{ confirm | default(0) }}"
    comment: ansible configured
  diff: yes
  tags:
    - prefix-list
    - upload


- name: generage default policy-options config
  template:
    src: default-policy-options.conf.j2
    dest: "{{ juniper_build }}/default-policy-options.conf"
  tags:
    - policy-options
    - config

- name: upload default policy-options config
  junipernetworks.junos.junos_config:
    src: "{{ juniper_build }}/default-policy-options.conf"
    update: replace
    comment: update config
    src_format: text
    check_commit: "{{ check_commit | default('no') }}"
    confirm: "{{ confirm | default(0) }}"
    comment: ansible configured
  diff: yes
  tags:
    - policy-options
    - upload


- name: generage default import and export policy-statement config
  template:
    src: import-export-policy-statement.conf.j2
    dest: "{{ juniper_build }}/import-export-policy-statement.conf"
  tags:
    - import-export
    - config

- name: upload default import and export policy-statement config
  junipernetworks.junos.junos_config:
    src: "{{ juniper_build }}/import-export-policy-statement.conf"
    update: replace
    comment: update config
    src_format: text
    check_commit: "{{ check_commit | default('no') }}"
    confirm: "{{ confirm | default(0) }}"
    comment: ansible configured
  diff: yes
  tags:
    - import-export
    - upload


- name: generate managed uplink bgp config
  template:
    src: bgp-peer.conf.j2
    dest: "{{ juniper_build }}/{{ item.name }}-bgp-peer.conf"
  with_items: "{{ bgp_groups }}"
  when: bgp_groups is defined
  tags:
    - bpg
    - config

- name: upload managed uplink bgp config
  junipernetworks.junos.junos_config:
    src: "{{ juniper_build }}/{{ item.name }}-bgp-peer.conf"
    update: replace
    comment: update config
    src_format: text
    check_commit: "{{ check_commit | default('no') }}"
    confirm: "{{ confirm | default(0) }}"
    comment: ansible configured
  diff: yes
  with_items: "{{ bgp_groups }}"
  when: bgp_groups is defined
  tags:
    - bgp
    - upload